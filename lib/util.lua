function string:split( inSplitPattern, outResults )
  if not outResults then
    outResults = { }
  end
  local theStart = 1
  local theSplitStart, theSplitEnd = string.find( self, inSplitPattern, 
theStart )
  while theSplitStart do
    table.insert( outResults, string.sub( self, theStart, theSplitStart-1 ) )
    theStart = theSplitEnd + 1
    theSplitStart, theSplitEnd = string.find( self, inSplitPattern, theStart )
  end
  table.insert( outResults, string.sub( self, theStart ) )
  return outResults
end

function get_network_prefix(ip, routing_prefix_bits)
  local digits = ip:split("%.")
  local network_prefix = 0
  for i=1,4 do
    network_prefix = bit32.lshift(network_prefix, 8)
    network_prefix = network_prefix + tonumber(digits[i])
  end
  if routing_prefix_bits < 32 then
    network_prefix = bit32.replace(network_prefix, 0, 0, 32-routing_prefix_bits)
  end
  return network_prefix
end

function number_to_ip(number)
  local ip_digits = {}
  for i=1,4 do
    local field = (4-i)*8
    ip_digits[i] = tostring(bit32.extract(number, field , 8))
  end
  return table.concat(ip_digits, ".")
end

require "lib.util"
if Vulnerability == nil then
  Vulnerability = require "lib.Vulnerability"
end

local Os = {}
Os.__index = Os
Os.os_name_version_map = {}
Os.all = {}

function Os.new(name, version)
  local self = setmetatable({}, Os)
  self.name = name
  self.version = version
  self.vulnerabilities = {}
  Os.all[#(Os.all)+1] = self
  if Os.os_name_version_map[name] == nil then
    Os.os_name_version_map[name] = {}
  end
  Os.os_name_version_map[name][version] = self
  return self
end

function Os.load()
  local f = assert(io.open("data/oses.txt", "r"))
  local t = f:read("*all")
  f:close()
  local items = t:split("======================================================\n")
  for index = 2, #items do
    local item = items[index]
    local lines = item:split("\n")
    local name = lines[1]:gsub("Name: ", "")
    table.remove(lines, 1)
    local version = lines[1]:gsub("Version: ", "")
    table.remove(lines, 1)
    local new_os = Os.new(name, version)
    for line_index = 1, #lines do
      local vuln_id = lines[line_index]:gsub("Vulnerability: ", "")
      local vulnerability = Vulnerability.lookup(vuln_id)
      new_os:add_vulnerability(vulnerability)
    end
  end
  return Os.all
end

function Os.lookup(name, version)
  return Os.os_name_version_map[name][version]
end

function Os:add_vulnerability(vulnerability)
  self.vulnerabilities[#(self.vulnerabilities)+1] = vulnerability
end

return Os
if Outcome == nil then
  Outcome = require "lib.Outcome"
end
if Configuration == nil then
  Configuration = require "lib.Configuration"
end
if Host == nil then
  Host = require "lib.Host"
end

local conf_ruwp = Configuration.lookup("root user weak password")
local conf_rrule = Configuration.lookup("remote root user login enabled")
local conf_rlwpe = Configuration.lookup("remote login with password enabled")

get_ssh_root_login = Outcome.new("get ssh root login")
get_ssh_root_login.eval = function (target)
  local target_host = target.host
  local target_ip = target.ip

  local flag_conf_ruwp = false
  local flag_conf_rrule = false
  local flag_conf_rlwpe = false

  for _,conf in ipairs(target_host.configurations) do
    if conf == conf_ruwp then
      flag_conf_ruwp = true
    elseif conf == conf_rrule then
      flag_conf_rrule = true
    elseif conf == conf_rlwpe then
      flag_conf_rlwpe = true
    end
  end

  if flag_conf_ruwp and flag_conf_rrule and flag_conf_rlwpe then
    target_host:set_state(Host.State.RootAccess)
    return "\nACCOUNT CHECK: [ssh] Host: " .. target_ip .. " (1 of 1, 0 complete) User: root (1 of 1, 0 complete) Password: *** (1000 of 1000 complete)\nACCOUNT FOUND: [ssh] Host: " .. target_ip .. " User: root Password: *** [SUCCESS]"
  else
    return "\nACCOUNT CHECK: [ssh] Host: " .. target_ip .. " (1 of 1, 0 complete) User: root (1 of 1, 0 complete) Password: *** (1000 of 1000 complete)"
  end
  return_str = "lo\tinet addr:127.0.0.1  Mask:255.0.0.0\n"
  for index, network_interface in ipairs(target_host.network_interfaces) do
    return_str = return_str .. "eth" .. (index - 1) .. "\tinet addr:" .. network_interface.ip .. "  Mask:" .. network_interface.network:get_mask() .. "\n\n"
  end
  return return_str
end

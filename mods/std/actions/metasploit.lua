require "lib.util"
if Action == nil then
  Action = require "lib.Action"
end
if Outcome == nil then
  Outcome = require "lib.Outcome"
end
if Vulnerability == nil then
  Vulnerability = require "lib.Vulnerability"
end

local vuln_cve_2008_4250 = Vulnerability.lookup("CVE-2008-4250")

local ms08_067_netapi = Action.new("msfcli exploit/windows/smb/ms08_067_netapi PAYLOAD=windows/meterpreter/reverse_tcp")
ms08_067_netapi.outcome = Outcome.lookup("exploit CVE-2008-4250")
ms08_067_netapi.target_vulnerabilities[#(ms08_067_netapi.target_vulnerabilities)+1] = vuln_cve_2008_4250
ms08_067_netapi.run = function (self, src_host, target_host_and_local_host)
  local splitted_target_host_and_local_host = target_host_and_local_host:split(" ")
  local target = {}
  for _,str in ipairs(splitted_target_host_and_local_host) do
    local splitted_str = str:split("=")
    if splitted_str[1] == "RHOST" then
      target.host_str = splitted_str[2]
    elseif splitted_str[1] == "LHOST" then
      target.local_host_str = splitted_str[2]
    end
  end
  if target.host_str == nil or target.local_host_str == nil then
    return "Invalid command"
  end
  target.host = src_host:get_reachable_host_by_ip(target.host_str)
  if target.host == nil then
    return "failed to connect host " .. target.host_str
  end
  target.local_host = target.host:get_reachable_host_by_ip(target.local_host_str)
  local flag_ssh_port_open_n_service_listenning = false
  for _, addr_port_listenning_service in ipairs(target.host.addr_port_listenning_services) do
    if addr_port_listenning_service.network_interface.ip == target.host_str and addr_port_listenning_service.protocol == "tcp" and addr_port_listenning_service.port == 445 then
      target.service = addr_port_listenning_service.service
      flag_ssh_port_open_n_service_listenning = true
      break
    end
  end
  if flag_ssh_port_open_n_service_listenning == false then
    return "failed to connect, port 445 host " .. target.host_str
  end
  return self.outcome.eval(target)
end

if Action == nil then
  Action = require "lib.Action"
end
if Outcome == nil then
  Outcome = require "lib.Outcome"
end

function avaliable_domain_targets(self, observed_map)
  local targets = {}
  for _,domain in ipairs(observed_map.domains) do
    targets[#(targets)+1] = domain.name
  end
  return targets
end

host_default = Action.new("host")
host_default.outcome = Outcome.lookup("resolve all dns")
host_default.get_avaliable_targets = avaliable_domain_targets

host_a = Action.new("host -t A")
host_a.outcome = Outcome.lookup("resolve A record")
host_a.get_avaliable_targets = avaliable_domain_targets

host_cname = Action.new("host -t CNAME")
host_cname.outcome = Outcome.lookup("resolve CNAME record")
host_cname.get_avaliable_targets = avaliable_domain_targets

host_ns = Action.new("host -t NS")
host_ns.outcome = Outcome.lookup("resolve NS record")
host_ns.get_avaliable_targets = avaliable_domain_targets

host_mx = Action.new("host -t MX")
host_mx.outcome = Outcome.lookup("resolve MX record")
host_mx.get_avaliable_targets = avaliable_domain_targets

require "lunit"
local Tool = require "lib.Tool"
local Action = require "lib.Action"

module( "Tool_testcase", package.seeall, lunit.testcase )

function test_new_method()
  Tool.tool_name_map = {}
  Tool.all = {}
  assert_not_nil( Tool.new("Stayman LockPick") )
end

function test_lookup_method()
  Tool.tool_name_map = {}
  Tool.all = {}
  Tool.new("Stayman LockPick")
  assert_equal( 0, #(Tool.lookup("Stayman LockPick").available_actions) )
end

function test_add_action_method()
  Tool.tool_name_map = {}
  Tool.all = {}
  Action.action_name_map = {}
  Action.all = {}
  action = Action.new("Stayman Exploit")
  tool = Tool.new("Stayman LockPick")
  tool:add_action(action)
  assert_equal( tool, Tool.lookup("Stayman LockPick") )
  assert_equal( 1, #(tool.available_actions) )
  assert_equal( action, tool.available_actions[1] )
end

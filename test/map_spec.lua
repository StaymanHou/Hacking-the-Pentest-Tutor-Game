require "lunit"
local map = require "map"
local Host = require "lib.Host"
local Network = require "lib.Network"
local Os = require "lib.Os"
if Domain == nil then
  Domain = require "lib.Domain"
end

module( "map_testcase", package.seeall, lunit.testcase )

function test_default_attribute()
  assert_equal( 0, #(map.domains) )
  assert_equal( 0, #(map.networks) )
  assert_equal( 0, #(map.hosts) )
end

function test_reset_method()
  Domain.domain_name_type_map = {}
  Domain.all = {}
  domain = Domain.new("stayman.com", "A", "10.0.0.1")
  map.domains[#(map.domains)+1] = domain

  network = Network.new("1.2.3.4/16")
  map.networks[#(map.networks)+1] = network

  Os.os_name_version_map = {}
  Os.all = {}
  os = Os.new("Stayman OS", "0.0.1")
  host = Host.new("targethost", Host.State.Undiscovered, o, Host.Type.Server)
  map.hosts[#(map.hosts)+1] = host

  assert_equal( 1, #(map.domains) )
  assert_equal( 1, #(map.networks) )
  assert_equal( 1, #(map.hosts) )

  map:reset()

  assert_equal( 0, #(map.domains) )
  assert_equal( 0, #(map.networks) )
  assert_equal( 0, #(map.hosts) )
end

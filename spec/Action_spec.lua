require "lunit"
local Action = require "lib.Action"

module( "Action_testcase", package.seeall, lunit.testcase )

function test_new_method()
  Action.action_name_map = {}
  Action.all = {}
  assert_not_nil( Action.new("Stayman Exploit") )
end

function test_lookup_method()
  Action.action_name_map = {}
  Action.all = {}
  Action.new("Stayman Exploit")
  assert_equal( nil, Action.lookup("Stayman Exploit").outcome )
  assert_equal( 0, #(Action.lookup("Stayman Exploit").target_vulnerabilities) )
  assert_equal( 0, #(Action.lookup("Stayman Exploit").target_configurations) )
end

function test_run_method()
  Action.action_name_map = {}
  Action.all = {}
  action = Action.new("Stayman Exploit")
  assert_error( "should raise error if run() not implemented", action.run )
  action.run = function (src_host, target)
    return 1
  end
  assert_equal( 1, action.run(nil, nil) )
end
